// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Scenario {
  id       String    @id @default(uuid())
  title    String    @unique
  slug     String    @unique
  chapters Chapter[]
}

model Chapter {
  id          String                  @id @default(uuid())
  title       String
  scenario    Scenario                @relation(fields: [scenarioId], references: [id])
  scenarioId  String
  Monster     Monster?                @relation(fields: [monsterId], references: [id])
  monsterId   String?
  soundscapes SoundscapesOnChapters[]
  Sound       Sound?                  @relation(fields: [soundId], references: [id])
  soundId     String?
}

model Monster {
  id        String    @id @default(uuid())
  name      String
  soundPath String
  iconPath  String?
  chapters  Chapter[]
}

model Sound {
  id       String    @id @default(uuid())
  name     String
  path     String
  iconPath String?
  chapters Chapter[]
}

model Ambience {
  id                String                  @id @default(uuid())
  name              String                  @unique
  description       String?
  path              String
  category          Category                @relation(fields: [categoryId], references: [id])
  categoryId        String
  soundscapes       AmbiencesOnSoundscape[]
  keywords          Keyword[]
  KeywordOnAmbience KeywordOnAmbience[]
}

model Keyword {
  id                String              @id @default(uuid())
  name              String
  Ambience          Ambience?           @relation(fields: [ambienceId], references: [id])
  ambienceId        String?
  KeywordOnAmbience KeywordOnAmbience[]
}

model KeywordOnAmbience {
  id         String   @id @default(uuid())
  keyword    Keyword  @relation(fields: [keywordId], references: [id])
  keywordId  String
  ambience   Ambience @relation(fields: [ambienceId], references: [id])
  ambienceId String
}

model Category {
  id       String     @id @default(uuid())
  name     String     @unique
  Ambience Ambience[]
}

model Soundscape {
  id          String                  @id @default(uuid())
  name        String
  description String?
  iconPath    String?
  ambiences   AmbiencesOnSoundscape[]
  chapters    SoundscapesOnChapters[]
}

model AmbiencesOnSoundscape {
  id           String     @id @default(uuid())
  ambience     Ambience   @relation(fields: [ambienceId], references: [id])
  ambienceId   String
  soundscape   Soundscape @relation(fields: [soundscapeId], references: [id])
  soundscapeId String
}

model SoundscapesOnChapters {
  id           String     @id @default(uuid())
  soundscape   Soundscape @relation(fields: [soundscapeId], references: [id])
  soundscapeId String
  chapter      Chapter    @relation(fields: [chapterId], references: [id])
  chapterId    String
}
